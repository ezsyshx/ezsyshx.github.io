<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[洛谷 P1095 守望者的逃离]]></title>
    <url>%2Fpassages%2F2019-04-07-P1095%2F</url>
    <content type="text"><![CDATA[传送门：洛谷 P1095 守望者的逃离 题目描述： 恶魔猎手尤迪安野心勃勃，他背叛了暗夜精灵，率领深藏在海底的娜迦族企图叛变。守望者在与尤迪安的交锋中遭遇了围杀，被困在一个荒芜的大岛上。为了杀死守望者，尤迪安开始对这个荒岛施咒，这座岛很快就会沉下去。到那时，岛上的所有人都会遇难。守望者的跑步速度为17m/s17m/s17m/s，以这样的速度是无法逃离荒岛的。庆幸的是守望者拥有闪烁法术，可在1s1s1s内移动60m60m60m，不过每次使用闪烁法术都会消耗魔法值101010点。守望者的魔法值恢复的速度为444点/s/s/s，只有处在原地休息状态时才能恢复。 现在已知守望者的魔法初值MMM，他所在的初始位置与岛的出口之间的距离SSS，岛沉没的时间TTT。你的任务是写一个程序帮助守望者计算如何在最短的时间内逃离荒岛，若不能逃出，则输出守望者在剩下的时间内能走的最远距离。注意：守望者跑步、闪烁或休息活动均以秒(s)(s)(s)为单位，且每次活动的持续时间为整数秒。距离的单位为米(m)(m)(m)。 算法分析：分两种情况： 1、运用贪心，尽可能用闪烁法术 2、枚举秒数，判断此时用跑步速度是否能获得更大收益 时间复杂度：O(t)O(t)O(t) 12345678910111213141516171819202122#include&lt;iostream&gt;#include&lt;cstdio&gt;using namespace std;const int maxT=300000;int t,m,s,dp[maxT+1],ans=0;int main()&#123; scanf("%d%d%d",&amp;m,&amp;s,&amp;t); for(int i=1;i&lt;=t;i++) &#123; if(m&gt;=10) &#123;dp[i]=dp[i-1]+60; m-=10;&#125; else &#123;dp[i]=dp[i-1]; m+=4;&#125; &#125; for(int i=1;i&lt;=t;i++) &#123; dp[i]=max(dp[i],dp[i-1]+17); if(dp[i]&gt;=s) &#123;ans=i; break;&#125; &#125; if(ans) printf("%d",ans); else printf("%d",dp[s]); return 0;&#125;]]></content>
      <categories>
        <category>Solutions</category>
      </categories>
      <tags>
        <tag>贪心</tag>
        <tag>线性DP</tag>
      </tags>
  </entry>
</search>
